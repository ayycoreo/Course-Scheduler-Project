
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Base64;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;


public class MainFrame extends javax.swing.JFrame {

    
    private String currentSemester;
    private String author;
    private String project;

    public MainFrame() {
        initComponents();
        checkData();
        rebuildSemesterComboBoxes();
        rebuildCourseCodeComboBoxes();
        rebuildClassComboBox();
        rebuildStudentComboBoxes();
    }

    public void rebuildSemesterComboBoxes() {
        ArrayList<String> semesters = SemesterQueries.getSemesterList();
        currentSemesterComboBox.setModel(new javax.swing.DefaultComboBoxModel(semesters.toArray()));
        if (semesters.size() > 0) {
            currentSemesterLabel.setText(semesters.get(0));
            currentSemester = semesters.get(0);
        } else {
            currentSemesterLabel.setText("None, add a semester.");
            currentSemester = "None";
        }
    }
    
    public void rebuildCourseCodeComboBoxes()
    {
        ArrayList<String> courseCodes = CourseQueries.getAllCourseCodes();
        courseCodeComboBox.setModel(new javax.swing.DefaultComboBoxModel(courseCodes.toArray()));
            
    }
    
    public void rebuildClassComboBox()
    {
        ArrayList<String> classes = ClassQueries.getAllCourseCodes(currentSemester);
        selectClassComboBox.setModel(new javax.swing.DefaultComboBoxModel(classes.toArray()));
        selectClassComboBox2.setModel(new javax.swing.DefaultComboBoxModel(classes.toArray()));
        selectClassComboBox3.setModel(new javax.swing.DefaultComboBoxModel(classes.toArray()));
        selectClassComboBox4.setModel(new javax.swing.DefaultComboBoxModel(classes.toArray()));
    }
    
    public void rebuildStudentComboBoxes()
    {
        ArrayList<StudentEntry> studentData = StudentQueries.getAllStudents();
        ArrayList<String> studentNames = new ArrayList<String>();
        
        for(StudentEntry student: studentData)
        {
            String name = (student.getLastName() + ", " + student.getFirstName() + " " + student.getStudentID());
            studentNames.add(name);
          
        }
        selectStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel(studentNames.toArray()));
        selectStudentComboBox2.setModel(new javax.swing.DefaultComboBoxModel(studentNames.toArray()));  // there are three combo boxes that contain student names
        selectStudentComboBox3.setModel(new javax.swing.DefaultComboBoxModel(studentNames.toArray()));
        selectStudentComboBox4.setModel(new javax.swing.DefaultComboBoxModel(studentNames.toArray()));
   
    }
    
    public String retrieveStudentIDtoScheduleClass()
    {
        String student = selectStudentComboBox2.getSelectedItem().toString();
        String studentID = "";
        ArrayList<StudentEntry> studentList = StudentQueries.getAllStudents();
        
        for (StudentEntry s:studentList)
        {
            String studentName = (s.getLastName() + ", " + s.getFirstName() + " " + s.getStudentID());       // I need to retrieve the data of the StudentID for the selected student.
            if(studentName.contentEquals(student))
            {
                studentID = s.getStudentID();
            }
            
        }
        return studentID;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        mainFramePanel = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        adminTabbedPanel = new javax.swing.JTabbedPane();
        addSemesterPanel = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        addSemesterTextfield = new javax.swing.JTextField();
        addSemesterSubmitButton = new javax.swing.JButton();
        addSemesterStatusLabel = new javax.swing.JLabel();
        addCoursePanel = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        addCourseDescriptionTextField = new javax.swing.JTextField();
        addCourseSubmitButton = new javax.swing.JButton();
        addCourseStatusLabel = new javax.swing.JLabel();
        addCourseCodeTextField = new javax.swing.JTextField();
        addClassPanel = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        seatsSpinner = new javax.swing.JSpinner();
        addClassSubmitButton = new javax.swing.JButton();
        addClassStatusLabel = new javax.swing.JLabel();
        courseCodeComboBox = new javax.swing.JComboBox<>();
        addStudentPanel = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        studentIDTextField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        firstNameTextField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        lastNameTextField = new javax.swing.JTextField();
        addStudentSubmitButton = new javax.swing.JButton();
        addStudentStatusLabel = new javax.swing.JLabel();
        dropClassPanel = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        selectClassComboBox3 = new javax.swing.JComboBox<>();
        displayAdminDropClassButton = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        adminDropClassTextArea = new javax.swing.JTextArea();
        displayClassListPanel = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        selectClassComboBox2 = new javax.swing.JComboBox<>();
        displayClassListButton = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        scheduledStudentsInClassTable = new javax.swing.JTable();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        waitListedStudentsInClassTable = new javax.swing.JTable();
        dropStudentPanel = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        displayDropStudentButton = new javax.swing.JButton();
        selectStudentComboBox3 = new javax.swing.JComboBox<>();
        jScrollPane6 = new javax.swing.JScrollPane();
        dropStudentTextArea = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        studentTabbedPanel = new javax.swing.JTabbedPane();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        displayClassesTable = new javax.swing.JTable();
        displayClassesDisplayButton = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        displayStudentScheduleTable = new javax.swing.JTable();
        jLabel13 = new javax.swing.JLabel();
        selectStudentComboBox = new javax.swing.JComboBox<>();
        displayStudentScheduleSubmitButton = new javax.swing.JButton();
        scheduleClassStatusPanel = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        selectClassComboBox = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        selectStudentComboBox2 = new javax.swing.JComboBox<>();
        scheduleClassSubmitButton = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        scheduleClassStatusLabel = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        selectStudentComboBox4 = new javax.swing.JComboBox<>();
        jLabel21 = new javax.swing.JLabel();
        selectClassComboBox4 = new javax.swing.JComboBox<>();
        displayStudentDropClassButton = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        studentDropClassTextArea = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        currentSemesterLabel = new javax.swing.JLabel();
        currentSemesterComboBox = new javax.swing.JComboBox<>();
        changeSemesterButton = new javax.swing.JButton();
        aboutButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 1, 30)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 153));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Course Scheduler");

        jLabel3.setText("Semester Name:");

        addSemesterTextfield.setColumns(20);

        addSemesterSubmitButton.setText("Submit");
        addSemesterSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSemesterSubmitButtonActionPerformed(evt);
            }
        });

        addSemesterStatusLabel.setText("                                                   ");

        javax.swing.GroupLayout addSemesterPanelLayout = new javax.swing.GroupLayout(addSemesterPanel);
        addSemesterPanel.setLayout(addSemesterPanelLayout);
        addSemesterPanelLayout.setHorizontalGroup(
            addSemesterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addSemesterPanelLayout.createSequentialGroup()
                .addGroup(addSemesterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addSemesterPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(addSemesterTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(addSemesterPanelLayout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(addSemesterSubmitButton))
                    .addGroup(addSemesterPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(addSemesterStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        addSemesterPanelLayout.setVerticalGroup(
            addSemesterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addSemesterPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addSemesterPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(addSemesterTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(addSemesterSubmitButton)
                .addGap(18, 18, 18)
                .addComponent(addSemesterStatusLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        adminTabbedPanel.addTab("Add Semester", addSemesterPanel);

        jLabel4.setText("Course Code:");

        jLabel5.setText("Course Description:");

        addCourseSubmitButton.setText("Submit");
        addCourseSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addCourseSubmitButtonActionPerformed(evt);
            }
        });

        addCourseStatusLabel.setText("          ");

        javax.swing.GroupLayout addCoursePanelLayout = new javax.swing.GroupLayout(addCoursePanel);
        addCoursePanel.setLayout(addCoursePanelLayout);
        addCoursePanelLayout.setHorizontalGroup(
            addCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addCoursePanelLayout.createSequentialGroup()
                .addGroup(addCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(addCourseSubmitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(addCourseDescriptionTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)
                    .addComponent(addCourseCodeTextField))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(addCoursePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(addCourseStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        addCoursePanelLayout.setVerticalGroup(
            addCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addCoursePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(addCourseCodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(addCoursePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(addCourseDescriptionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(addCourseSubmitButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addCourseStatusLabel)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        adminTabbedPanel.addTab("Add Course", addCoursePanel);

        jLabel10.setText("Course Code:");

        jLabel11.setText("Seats:");

        addClassSubmitButton.setText("Submit");
        addClassSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addClassSubmitButtonActionPerformed(evt);
            }
        });

        courseCodeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout addClassPanelLayout = new javax.swing.GroupLayout(addClassPanel);
        addClassPanel.setLayout(addClassPanelLayout);
        addClassPanelLayout.setHorizontalGroup(
            addClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addClassPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addClassPanelLayout.createSequentialGroup()
                        .addGroup(addClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(addClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addClassSubmitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(seatsSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(courseCodeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(addClassStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(533, Short.MAX_VALUE))
        );
        addClassPanelLayout.setVerticalGroup(
            addClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addClassPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(courseCodeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(seatsSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addClassSubmitButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addClassStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        adminTabbedPanel.addTab("Add Class", addClassPanel);

        jLabel6.setText("Student ID:");

        jLabel7.setText("First Name:");

        jLabel8.setText("Last Name:");

        addStudentSubmitButton.setText("Submit");
        addStudentSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addStudentSubmitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout addStudentPanelLayout = new javax.swing.GroupLayout(addStudentPanel);
        addStudentPanel.setLayout(addStudentPanelLayout);
        addStudentPanelLayout.setHorizontalGroup(
            addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addStudentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addStudentStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 352, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(addStudentPanelLayout.createSequentialGroup()
                        .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addStudentSubmitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(studentIDTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                                .addComponent(firstNameTextField))
                            .addComponent(lastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(424, Short.MAX_VALUE))
        );
        addStudentPanelLayout.setVerticalGroup(
            addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addStudentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(studentIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(firstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(lastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(addStudentSubmitButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addStudentStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        adminTabbedPanel.addTab("Add Student", addStudentPanel);

        jLabel19.setText("Choose Class:");

        selectClassComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        displayAdminDropClassButton.setText("Display");
        displayAdminDropClassButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayAdminDropClassButtonActionPerformed(evt);
            }
        });

        adminDropClassTextArea.setColumns(20);
        adminDropClassTextArea.setRows(5);
        jScrollPane5.setViewportView(adminDropClassTextArea);

        javax.swing.GroupLayout dropClassPanelLayout = new javax.swing.GroupLayout(dropClassPanel);
        dropClassPanel.setLayout(dropClassPanelLayout);
        dropClassPanelLayout.setHorizontalGroup(
            dropClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dropClassPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dropClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 535, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(dropClassPanelLayout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(dropClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(displayAdminDropClassButton)
                            .addComponent(selectClassComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(241, Short.MAX_VALUE))
        );
        dropClassPanelLayout.setVerticalGroup(
            dropClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dropClassPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dropClassPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(selectClassComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(displayAdminDropClassButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        adminTabbedPanel.addTab("Drop Class", dropClassPanel);

        jLabel15.setText("Choose Class:");

        selectClassComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        displayClassListButton.setText("Display");
        displayClassListButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayClassListButtonActionPerformed(evt);
            }
        });

        jLabel16.setText("Scheduled Students in the Class");

        scheduledStudentsInClassTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Last Name", "First Name", "StudentID"
            }
        ));
        jScrollPane3.setViewportView(scheduledStudentsInClassTable);

        jLabel17.setText("Waitlisted Students in the Class in Waitlist Order");

        waitListedStudentsInClassTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Last Name", "First Name", "StudentID"
            }
        ));
        jScrollPane4.setViewportView(waitListedStudentsInClassTable);

        javax.swing.GroupLayout displayClassListPanelLayout = new javax.swing.GroupLayout(displayClassListPanel);
        displayClassListPanel.setLayout(displayClassListPanelLayout);
        displayClassListPanelLayout.setHorizontalGroup(
            displayClassListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayClassListPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(displayClassListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(displayClassListPanelLayout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(selectClassComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(displayClassListButton))
                    .addGroup(displayClassListPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(28, Short.MAX_VALUE))
            .addGroup(displayClassListPanelLayout.createSequentialGroup()
                .addGap(86, 86, 86)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel17)
                .addGap(113, 113, 113))
        );
        displayClassListPanelLayout.setVerticalGroup(
            displayClassListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayClassListPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(displayClassListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(selectClassComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(displayClassListButton))
                .addGap(6, 6, 6)
                .addGroup(displayClassListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(displayClassListPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(51, Short.MAX_VALUE))
        );

        adminTabbedPanel.addTab("Display Class List", displayClassListPanel);

        jLabel18.setText("Choose Student:");

        displayDropStudentButton.setText("Display");
        displayDropStudentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayDropStudentButtonActionPerformed(evt);
            }
        });

        selectStudentComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        dropStudentTextArea.setColumns(20);
        dropStudentTextArea.setRows(5);
        jScrollPane6.setViewportView(dropStudentTextArea);

        javax.swing.GroupLayout dropStudentPanelLayout = new javax.swing.GroupLayout(dropStudentPanel);
        dropStudentPanel.setLayout(dropStudentPanelLayout);
        dropStudentPanelLayout.setHorizontalGroup(
            dropStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dropStudentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dropStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 545, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(dropStudentPanelLayout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(dropStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(displayDropStudentButton)
                            .addComponent(selectStudentComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(231, Short.MAX_VALUE))
        );
        dropStudentPanelLayout.setVerticalGroup(
            dropStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dropStudentPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dropStudentPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(selectStudentComboBox3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(displayDropStudentButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                .addContainerGap())
        );

        adminTabbedPanel.addTab("Drop Student", dropStudentPanel);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(adminTabbedPanel)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(adminTabbedPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        mainFramePanel.addTab("Admin", jPanel1);

        displayClassesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Course Code", "Description", "Seats"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(displayClassesTable);

        displayClassesDisplayButton.setText("Display");
        displayClassesDisplayButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayClassesDisplayButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 772, Short.MAX_VALUE)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(336, 336, 336)
                .addComponent(displayClassesDisplayButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(displayClassesDisplayButton)
                .addGap(0, 32, Short.MAX_VALUE))
        );

        studentTabbedPanel.addTab("Display Classes", jPanel5);

        displayStudentScheduleTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Course Code", "Status"
            }
        ));
        jScrollPane1.setViewportView(displayStudentScheduleTable);

        jLabel13.setText("Select Student:");

        selectStudentComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        displayStudentScheduleSubmitButton.setText("Display");
        displayStudentScheduleSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayStudentScheduleSubmitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 772, Short.MAX_VALUE)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(selectStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(347, 347, 347)
                        .addComponent(displayStudentScheduleSubmitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(selectStudentComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(displayStudentScheduleSubmitButton)
                .addGap(30, 30, 30))
        );

        studentTabbedPanel.addTab("Display Student Schedule", jPanel9);

        jLabel14.setText("Select Class:");

        selectClassComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel9.setText("Select Student:");

        selectStudentComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        scheduleClassSubmitButton.setText("Submit");
        scheduleClassSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scheduleClassSubmitButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout scheduleClassStatusPanelLayout = new javax.swing.GroupLayout(scheduleClassStatusPanel);
        scheduleClassStatusPanel.setLayout(scheduleClassStatusPanelLayout);
        scheduleClassStatusPanelLayout.setHorizontalGroup(
            scheduleClassStatusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(scheduleClassStatusPanelLayout.createSequentialGroup()
                .addGroup(scheduleClassStatusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(scheduleClassStatusPanelLayout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, scheduleClassStatusPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(scheduleClassStatusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(scheduleClassStatusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(scheduleClassSubmitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(selectStudentComboBox2, 0, 193, Short.MAX_VALUE)
                            .addComponent(selectClassComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(486, Short.MAX_VALUE))
            .addGroup(scheduleClassStatusPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scheduleClassStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 425, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(335, Short.MAX_VALUE))
        );
        scheduleClassStatusPanelLayout.setVerticalGroup(
            scheduleClassStatusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(scheduleClassStatusPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(scheduleClassStatusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(selectClassComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(scheduleClassStatusPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(selectStudentComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(scheduleClassSubmitButton)
                .addGap(18, 18, 18)
                .addComponent(scheduleClassStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12)
                .addContainerGap(121, Short.MAX_VALUE))
        );

        studentTabbedPanel.addTab("Schedule Class", scheduleClassStatusPanel);

        jLabel20.setText("Choose Student:");

        selectStudentComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel21.setText("Choose Class:");

        selectClassComboBox4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        displayStudentDropClassButton.setText("Submit");
        displayStudentDropClassButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayStudentDropClassButtonActionPerformed(evt);
            }
        });

        studentDropClassTextArea.setColumns(20);
        studentDropClassTextArea.setRows(5);
        jScrollPane7.setViewportView(studentDropClassTextArea);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 549, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(selectClassComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(displayStudentDropClassButton)
                            .addComponent(selectStudentComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(211, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(selectStudentComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(selectClassComboBox4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(displayStudentDropClassButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        studentTabbedPanel.addTab("Drop Class", jPanel3);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(studentTabbedPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 777, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(studentTabbedPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        mainFramePanel.addTab("Student", jPanel2);

        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 1, 16)); // NOI18N
        jLabel2.setText("Current Semester: ");

        currentSemesterLabel.setFont(new java.awt.Font("Comic Sans MS", 0, 16)); // NOI18N
        currentSemesterLabel.setText("           ");

        currentSemesterComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        changeSemesterButton.setText("Change Semester");
        changeSemesterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                changeSemesterButtonActionPerformed(evt);
            }
        });

        aboutButton.setText("About");
        aboutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aboutButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(mainFramePanel)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(currentSemesterLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(currentSemesterComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(changeSemesterButton)
                                .addGap(31, 31, 31)
                                .addComponent(aboutButton)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(currentSemesterLabel)
                    .addComponent(currentSemesterComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(changeSemesterButton)
                    .addComponent(aboutButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE)
                .addComponent(mainFramePanel, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void aboutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutButtonActionPerformed
        // TODO add your handling code here:
        // display about information.
        JOptionPane.showMessageDialog(null, "Author: " + author + " Project: " + project);
    }//GEN-LAST:event_aboutButtonActionPerformed

    private void addSemesterSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSemesterSubmitButtonActionPerformed
        String semester = addSemesterTextfield.getText();
        SemesterQueries.addSemester(semester);
        addSemesterTextfield.setText("");
        addSemesterStatusLabel.setText("Semester " + semester + " has been added.");
        rebuildSemesterComboBoxes();
    }//GEN-LAST:event_addSemesterSubmitButtonActionPerformed

    private void addStudentSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addStudentSubmitButtonActionPerformed
        String studentID = studentIDTextField.getText();
        String firstName = firstNameTextField.getText();
        String lastName = lastNameTextField.getText();
        
        if (studentID.isBlank() || firstName.isBlank() || lastName.isBlank())
        {
            addStudentStatusLabel.setText("Please fill out all the required information, try again");
        }
        else
        {
            StudentEntry student = new StudentEntry(studentID,firstName,lastName);
            StudentQueries.addStudent(student);
            
            addStudentStatusLabel.setText(lastName + ", " + firstName + " has been added");
            
            studentIDTextField.setText("");
            firstNameTextField.setText("");
            lastNameTextField.setText("");
            rebuildStudentComboBoxes();
        }
    }//GEN-LAST:event_addStudentSubmitButtonActionPerformed

    private void addCourseSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addCourseSubmitButtonActionPerformed
        
        String courseCode = addCourseCodeTextField.getText();
        String courseDescription = addCourseDescriptionTextField.getText();
        
        if (courseCode.isBlank() || courseDescription.isBlank())
        {
            addCourseStatusLabel.setText("Please fill out all the information needed to add a course before submitting.");
        }
        
        else
        {
            CourseEntry course = new CourseEntry(courseCode,courseDescription);
            CourseQueries.addCourse(course);
            
            addCourseCodeTextField.setText("");
            addCourseDescriptionTextField.setText("");  ///  I am setting the textFields empty after a successful submission has been executed. 
            
            addCourseStatusLabel.setText(courseCode + " has been added.");
            rebuildCourseCodeComboBoxes();
            
        }
    }//GEN-LAST:event_addCourseSubmitButtonActionPerformed

    private void changeSemesterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeSemesterButtonActionPerformed
       currentSemester = currentSemesterComboBox.getSelectedItem().toString();
       currentSemesterLabel.setText(currentSemester);
       addSemesterStatusLabel.setText("");
       addStudentStatusLabel.setText("");
       addCourseStatusLabel.setText("");
       addClassStatusLabel.setText("");
       rebuildCourseCodeComboBoxes();
       rebuildClassComboBox();
       DefaultTableModel defaultDisplayClasses = (DefaultTableModel) displayClassesTable.getModel();  // once the user changes semesters, we want to make sure the display tables have a clean slate.
       defaultDisplayClasses.setRowCount(0);
       
       DefaultTableModel defaultDisplayStudentSchedule = (DefaultTableModel) displayStudentScheduleTable.getModel();
       defaultDisplayStudentSchedule.setRowCount(0);
       
       adminDropClassTextArea.setText("");
       dropStudentTextArea.setText("");
       
       DefaultTableModel displayScheduled = (DefaultTableModel) scheduledStudentsInClassTable.getModel();
       displayScheduled.setRowCount(0);
       
       DefaultTableModel displayWaitListed = (DefaultTableModel) waitListedStudentsInClassTable.getModel();
       displayWaitListed.setRowCount(0);
       
       studentDropClassTextArea.setText("");
       
       
    }//GEN-LAST:event_changeSemesterButtonActionPerformed

    private void addClassSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addClassSubmitButtonActionPerformed
        
        String courseCode = courseCodeComboBox.getSelectedItem().toString();
        int seats = (Integer) seatsSpinner.getValue();
        
        if(seats <= 0 || courseCode.isBlank())
        {
            addClassStatusLabel.setText("There is a no courseCode selected or there is no proper number of a seats for the class, try again.");
        }
        else
        {  
            ClassEntry Class = new ClassEntry(currentSemester,courseCode,seats);
            ClassQueries.addClass(Class);
            
            seatsSpinner.setValue(0);  // everytime I submit I want the seats spinner to default back at zero.
            addClassStatusLabel.setText(courseCode + " has been added.");
            rebuildClassComboBox();
        }
        
    }//GEN-LAST:event_addClassSubmitButtonActionPerformed

    private void displayClassesDisplayButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayClassesDisplayButtonActionPerformed
        
        ArrayList<ClassDescription> classes = MultiTableQueries.getAllClassDescriptions(currentSemester);
        Object[] rowData = new Object[3];
        
        DefaultTableModel displayClasses = (DefaultTableModel) displayClassesTable.getModel();
        displayClasses.setRowCount(0);
        for (ClassDescription c: classes)
        {
            rowData[0] = c.getCourseCode();
            rowData[1] = c.getDescription();
            rowData[2] = c.getSeats();
            displayClasses.addRow(rowData);      
        }
    }//GEN-LAST:event_displayClassesDisplayButtonActionPerformed

    private void displayStudentScheduleSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayStudentScheduleSubmitButtonActionPerformed
       
        String student = selectStudentComboBox.getSelectedItem().toString();
        String studentID = "";
        ArrayList<StudentEntry> studentList = StudentQueries.getAllStudents();
        
        for (StudentEntry s:studentList)
        {
            String studentName = (s.getLastName() + ", " + s.getFirstName() + " " + s.getStudentID());       // I need to retrieve the data of the StudentID for the selected student.
            if(studentName.contentEquals(student))
            {
                studentID = s.getStudentID();
            }
            
        }
        ArrayList<ScheduleEntry> studentSchedule = ScheduleQueries.getScheduleByStudent(currentSemester, studentID);
        
        DefaultTableModel studentScheduleDisplayTable = (DefaultTableModel) displayStudentScheduleTable.getModel();
        studentScheduleDisplayTable.setRowCount(0);
        
        Object[] rowData = new Object[2];
        String statusLabel = "";
        for (ScheduleEntry className : studentSchedule)
        {
            rowData[0] = className.getCourseCode();
            
            if(className.getStatus().contentEquals("Scheduled"))
            {
                statusLabel = className.getStatus();
            }
            else if (className.getStatus().contentEquals("Waitlisted"))
            {
                statusLabel = className.getStatus();
            }
            rowData[1] = statusLabel;
            studentScheduleDisplayTable.addRow(rowData);
           
        }
                
    }//GEN-LAST:event_displayStudentScheduleSubmitButtonActionPerformed

    private void scheduleClassSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scheduleClassSubmitButtonActionPerformed
        
        String student = selectStudentComboBox2.getSelectedItem().toString();
        String studentID = retrieveStudentIDtoScheduleClass();
        String Class = selectClassComboBox.getSelectedItem().toString();
        
      
        int classStudentCount = ScheduleQueries.getScheduledStudentCount(currentSemester, Class);
        int classSeats = ClassQueries.getClassSeats(currentSemester, Class);
        java.sql.Timestamp currentTimestamp;
        String status = "";
        
        if(classStudentCount >= classSeats)
        {
            status = "Waitlisted";
            currentTimestamp = new java.sql.Timestamp(Calendar.getInstance().getTime().getTime());
            scheduleClassStatusLabel.setText(student + " has been waitlisted for " + Class);
            
        }
        else
        {
            status = "Scheduled";
            currentTimestamp = new java.sql.Timestamp(Calendar.getInstance().getTime().getTime());
            scheduleClassStatusLabel.setText(student + " has been scheduled for " + Class);
        }
        
        ScheduleEntry studentSchedule = new ScheduleEntry(currentSemester,Class,studentID,status,currentTimestamp);
        ScheduleQueries.addScheduleEntry(studentSchedule);
    }//GEN-LAST:event_scheduleClassSubmitButtonActionPerformed

    private void displayAdminDropClassButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayAdminDropClassButtonActionPerformed
       
        String Class = selectClassComboBox3.getSelectedItem().toString();
        
        ArrayList<StudentEntry> scheduledStudents = MultiTableQueries.getScheduledStudentsByClass(currentSemester, Class);
        ArrayList<StudentEntry> waitListedStudents = MultiTableQueries.getWaitListedStudentsByClass(currentSemester,Class);
        
        adminDropClassTextArea.append("Scheduled students dropped from the course:");
        
        for(StudentEntry entry: scheduledStudents)
        {
            StudentEntry student = StudentQueries.getStudent(entry.getStudentID());
            adminDropClassTextArea.append("\n" + student.getLastName() + ", " + student.getFirstName() + " " + student.getStudentID());
        }
        
        adminDropClassTextArea.append("\n\n");
        
        adminDropClassTextArea.append("Waitlisted students dropped from the course:");
        
        for(StudentEntry entry: waitListedStudents)
        {
            StudentEntry student = StudentQueries.getStudent(entry.getStudentID());
            adminDropClassTextArea.append("\n" + student.getLastName() + ", " + student.getFirstName() + " " + student.getStudentID());
        }
        
        ClassQueries.dropClass(currentSemester, Class);
        ScheduleQueries.dropScheduleByCourse(currentSemester, Class);
    }//GEN-LAST:event_displayAdminDropClassButtonActionPerformed

    private void displayClassListButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayClassListButtonActionPerformed
        
        String Class = selectClassComboBox2.getSelectedItem().toString();
        
        ArrayList<StudentEntry> scheduledStudents = MultiTableQueries.getScheduledStudentsByClass(currentSemester, Class);
        ArrayList<StudentEntry> waitListedStudents = MultiTableQueries.getWaitListedStudentsByClass(currentSemester, Class);
        
        DefaultTableModel displayScheduled = (DefaultTableModel) scheduledStudentsInClassTable.getModel();
        displayScheduled.setRowCount(0);
        Object[] row = new Object[3];
        
        for(StudentEntry student : scheduledStudents)
        {
            row[0] = student.getLastName();
            row[1] = student.getFirstName();
            row[2] = student.getStudentID();
            displayScheduled.addRow(row);
        }
        
        DefaultTableModel displayWaitListed = (DefaultTableModel) waitListedStudentsInClassTable.getModel();
        displayWaitListed.setRowCount(0);
        Object[] row2 = new Object[3];
        
        for (StudentEntry student : waitListedStudents)
        {
            row2[0] = student.getLastName();
            row2[1] = student.getFirstName();
            row2[2] = student.getStudentID();
            displayWaitListed.addRow(row2);
        }
        
    }//GEN-LAST:event_displayClassListButtonActionPerformed

    private void displayDropStudentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayDropStudentButtonActionPerformed
            
        String student = selectStudentComboBox3.getSelectedItem().toString();
        ArrayList<StudentEntry> studentList = StudentQueries.getAllStudents();
        
        String studentID = "";
        
        for(StudentEntry tempStudent : studentList)
        {
            if(student.contains(tempStudent.getStudentID()))
            {
                studentID = tempStudent.getStudentID();
            }
        }
        
        dropStudentTextArea.setText(student + " has been dropped from the list of students.");
        
        ArrayList<String> semesterList = SemesterQueries.getSemesterList();
        
        for(String semester : semesterList)
        {
            dropStudentTextArea.append("\n\n" + "For Semester: " + semester);
            ArrayList<ScheduleEntry> classList = ScheduleQueries.getScheduleByStudent(semester, studentID);
            
            for(ScheduleEntry dropCourse : classList)
            {
                String status = dropCourse.getStatus();
                String course = dropCourse.getCourseCode();
                
                if(status.contentEquals("Scheduled"))
                {
                    dropStudentTextArea.append("\n" + student + " has been dropped from " + course);
                    ScheduleQueries.dropStudentScheduleByCourse(semester, studentID, course);
                    
                    ArrayList<ScheduleEntry> waitList = ScheduleQueries.getWaitListedStudentsByClass(semester, course);
                    if( !waitList.isEmpty())
                    {
                        ScheduleEntry studentToSchedule = waitList.get(0);
                        ScheduleQueries.updateScheduleEntry(studentToSchedule);
                        StudentEntry newScheduledStudent = StudentQueries.getStudent(studentToSchedule.getStudentID());
                        dropStudentTextArea.append("\n" + newScheduledStudent.getLastName() + ", " + newScheduledStudent.getFirstName() + " " + newScheduledStudent.getStudentID() + " has been scheduled into " + course);
                    }  
                }
                else if (status.contentEquals("Waitlisted"))
                {
                    dropStudentTextArea.append("\n" + student + " has been dropped from the waitlist for " + course);
                    ScheduleQueries.dropStudentScheduleByCourse(semester, studentID, course);
                }  
            }   
        }
        
        StudentQueries.dropStudent(studentID);
        rebuildStudentComboBoxes();
        
    }//GEN-LAST:event_displayDropStudentButtonActionPerformed

    private void displayStudentDropClassButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayStudentDropClassButtonActionPerformed
        
        ArrayList<StudentEntry> studentList = StudentQueries.getAllStudents();
        String studentID = "";
        
        String chosenStudent = selectStudentComboBox4.getSelectedItem().toString();
        
        for(StudentEntry tempStudent : studentList)
        {
            if(chosenStudent.contains(tempStudent.getStudentID()))
            {
                studentID = tempStudent.getStudentID();
            }
        }
        
        String Class = selectClassComboBox4.getSelectedItem().toString();
        
        ScheduleQueries.dropStudentScheduleByCourse(currentSemester, studentID, Class);
        studentDropClassTextArea.append(chosenStudent + " has been dropped from " + Class);
        
        ArrayList<ScheduleEntry> waitList = ScheduleQueries.getWaitListedStudentsByClass(currentSemester, Class);
        
        if( !waitList.isEmpty())
        {
            ScheduleEntry studentToSchedule = waitList.get(0);
            ScheduleQueries.updateScheduleEntry(studentToSchedule);
            StudentEntry newScheduledStudent = StudentQueries.getStudent(studentToSchedule.getStudentID());
            studentDropClassTextArea.append("\n" + newScheduledStudent.getLastName() + ", " + newScheduledStudent.getFirstName() + " " + newScheduledStudent.getStudentID() + " has been scheduled into " + Class);
        }
    }//GEN-LAST:event_displayStudentDropClassButtonActionPerformed

    private void checkData() {
        try {
            FileReader reader = new FileReader("xzq789yy.txt");
            BufferedReader breader = new BufferedReader(reader);

            String encodedAuthor = breader.readLine();
            String encodedProject = breader.readLine();
            byte[] decodedAuthor = Base64.getDecoder().decode(encodedAuthor);
            author = new String(decodedAuthor);
            byte[] decodedProject = Base64.getDecoder().decode(encodedProject);
            project = new String(decodedProject);
            reader.close();

        } catch (FileNotFoundException e) {
            //get user info and create file
            author = JOptionPane.showInputDialog("Enter your first and last name.");
            project = "Course Scheduler Fall 2023";

            //write data to the data file.
            try {
                FileWriter writer = new FileWriter("xzq789yy.txt", true);
                BufferedWriter bufferedWriter = new BufferedWriter(writer);

                // encode the output data.
                String encodedAuthor = Base64.getEncoder().encodeToString(author.getBytes());

                bufferedWriter.write(encodedAuthor);
                bufferedWriter.newLine();

                String encodedProject = Base64.getEncoder().encodeToString(project.getBytes());
                bufferedWriter.write(encodedProject);

                bufferedWriter.close();
            } catch (IOException ioe) {
                ioe.printStackTrace();
                System.exit(1);
            }

        } catch (IOException e) {
            e.printStackTrace();
            System.exit(1);
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton aboutButton;
    private javax.swing.JPanel addClassPanel;
    private javax.swing.JLabel addClassStatusLabel;
    private javax.swing.JButton addClassSubmitButton;
    private javax.swing.JTextField addCourseCodeTextField;
    private javax.swing.JTextField addCourseDescriptionTextField;
    private javax.swing.JPanel addCoursePanel;
    private javax.swing.JLabel addCourseStatusLabel;
    private javax.swing.JButton addCourseSubmitButton;
    private javax.swing.JPanel addSemesterPanel;
    private javax.swing.JLabel addSemesterStatusLabel;
    private javax.swing.JButton addSemesterSubmitButton;
    private javax.swing.JTextField addSemesterTextfield;
    private javax.swing.JPanel addStudentPanel;
    private javax.swing.JLabel addStudentStatusLabel;
    private javax.swing.JButton addStudentSubmitButton;
    private javax.swing.JTextArea adminDropClassTextArea;
    private javax.swing.JTabbedPane adminTabbedPanel;
    private javax.swing.JButton changeSemesterButton;
    private javax.swing.JComboBox<String> courseCodeComboBox;
    private javax.swing.JComboBox<String> currentSemesterComboBox;
    private javax.swing.JLabel currentSemesterLabel;
    private javax.swing.JButton displayAdminDropClassButton;
    private javax.swing.JButton displayClassListButton;
    private javax.swing.JPanel displayClassListPanel;
    private javax.swing.JButton displayClassesDisplayButton;
    private javax.swing.JTable displayClassesTable;
    private javax.swing.JButton displayDropStudentButton;
    private javax.swing.JButton displayStudentDropClassButton;
    private javax.swing.JButton displayStudentScheduleSubmitButton;
    private javax.swing.JTable displayStudentScheduleTable;
    private javax.swing.JPanel dropClassPanel;
    private javax.swing.JPanel dropStudentPanel;
    private javax.swing.JTextArea dropStudentTextArea;
    private javax.swing.JTextField firstNameTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTextField lastNameTextField;
    private javax.swing.JTabbedPane mainFramePanel;
    private javax.swing.JLabel scheduleClassStatusLabel;
    private javax.swing.JPanel scheduleClassStatusPanel;
    private javax.swing.JButton scheduleClassSubmitButton;
    private javax.swing.JTable scheduledStudentsInClassTable;
    private javax.swing.JSpinner seatsSpinner;
    private javax.swing.JComboBox<String> selectClassComboBox;
    private javax.swing.JComboBox<String> selectClassComboBox2;
    private javax.swing.JComboBox<String> selectClassComboBox3;
    private javax.swing.JComboBox<String> selectClassComboBox4;
    private javax.swing.JComboBox<String> selectStudentComboBox;
    private javax.swing.JComboBox<String> selectStudentComboBox2;
    private javax.swing.JComboBox<String> selectStudentComboBox3;
    private javax.swing.JComboBox<String> selectStudentComboBox4;
    private javax.swing.JTextArea studentDropClassTextArea;
    private javax.swing.JTextField studentIDTextField;
    private javax.swing.JTabbedPane studentTabbedPanel;
    private javax.swing.JTable waitListedStudentsInClassTable;
    // End of variables declaration//GEN-END:variables
}
